doTheThing(06);//import embedded hypercube in this .html doc
doTheThing(07);//initialize Geometron global variables

document.getElementById("mainCanvas").width = innerWidth;
document.getElementById("mainCanvas").height = innerHeight;

unit = innerHeight/8;
x0 =  0.5*innerWidth;
y0 = 0.5*innerHeight;

currentGlyph = "0207,";
    
controls = document.getElementById("controlTable").getElementsByTagName("input");   

cleanGlyph = "";

editMode = true;
glyphEditMode = true;
shapeTableEditMode = false;

controls[1].select();

exturlset = false;
if(document.getElementById("extdatadiv").innerHTML.length > 10){
    document.getElementById("datadiv").innerHTML = document.getElementById("extdatadiv").innerHTML;
    document.getElementById("shadowdatadiv").innerHTML = document.getElementById("extdatadiv").innerHTML;
    exturlset = true;
}


pages = document.getElementById("datadiv").getElementsByClassName("page");
shadowpages = document.getElementById("shadowdatadiv").getElementsByClassName("page");

pageIndex = 0;
boxIndex = 0;

if(document.getElementById("pageNumberDiv").innerHTML.length > 0){
   pageIndex = parseInt(document.getElementById("pageNumberDiv").innerHTML);
   exturlset = true;
}


boxes = pages[pageIndex].getElementsByClassName("box");
shadowboxes = shadowpages[pageIndex].getElementsByClassName("box");

for(var index = 0;index < pages.length;index++){
    if(index != pageIndex){
        pages[index].style.display = "none";
    }
    else{
        pages[index].style.display = "block";
    }
}

//document.getElementById("mainpage").appendChild(pages[pageIndex]);

cleanGlyph = boxes[boxIndex].getElementsByClassName("glyphdata")[0].innerHTML;
currentGlyph = cleanGlyph + "0207,";

pagejson = JSON.parse(pages[pageIndex].getElementsByClassName("pagejson")[0].innerHTML);
unit = pagejson.unitrel*innerHeight/8;
x0 =  0.5*innerWidth + pagejson.x0rel*unit;
y0 = 0.5*innerHeight + pagejson.y0rel*unit;


editor = ace.edit("maineditor");
editor.setTheme("ace/theme/cobalt");
editor.getSession().setMode("ace/mode/html");
editor.getSession().setUseWrapMode(true);
editor.$blockScrolling = Infinity;
editor.setValue(boxes[boxIndex].getElementsByClassName("content")[0].innerHTML);


var myElement = document.getElementById('mainpage');


//hammer code, commented out:
// create a simple instance
// by default, it only adds horizontal recognizers
//var mc = new Hammer(myElement);

// listen to events...
/*
mc.on("swiperight", function(ev) {
    pagefwd();
    redraw();
});

mc.on("swipeleft", function(ev) {
    pageback();
    redraw();
});
*/

editMode = true;

buttons = document.getElementById("buttontable").getElementsByTagName("TD");

if(exturlset){
    editMode = false;
           document.getElementById("glyphspellinput").style.display = "none"; 
       document.getElementById("controlTable").style.display = "none"; 
       document.getElementById("editorlink").style.display = "none"; 
       document.getElementById("uplink").style.display = "none"; 
       document.getElementById("deckslink").style.display = "none"; 
       document.getElementById("maineditor").style.display = "none"; 
       document.getElementById("buttontable").style.display = "none"; 
       for(var index = 0;index < boxes.length;index++){
           boxes[index].style.border = "none";
       }

}