<script>
    function formatsci(inputFloat){
    var instring = inputFloat.toExponential(2);
    var outstring = "";
    if(instring.split("e").length > 0){
        outstring = "$" + instring.split("e")[0] + " \\times 10^{" + instring.split("e")[1] + "}$";
    }
    else{
        outstring = instring;
    }
    return outstring;
}
    
</script>

<equation>
$$L_J = \frac{\Phi_0}{2\pi I_C}$$
$$I_C = \frac{\Phi_0}{2\pi L_J}$$
$$\Phi_0 \equiv \frac{h}{2e} = 2.07\times10^{-15} \textrm{Wb}$$
$$1 \textrm{Wb} = 1 \textrm{henry[H]}\times 1\textrm{ampere[A]}$$
$$\frac{\Phi_0}{2\pi} = 1.7\times10^{-16} \textrm{Wb} = 170 \textrm{nH}\times\textrm{nA}$$
</equation>
<calctable> 
    <tr>
        <td>Ic[A]:</td><td><input/></td>
    </tr>    
    </tr>
        <td>Ic[$\mu$A]:</td><td><input/></td>
    </tr>    
    </tr>
        <td>Ic[nA]:</td><td><input/></td>
    </tr>
    <tr>
        <td>LJ[H]:</td><td><input/></td>
    </tr>    
    </tr>
        <td>LJ[nH]:</td><td><input/></td>
    </tr>    
    </tr>
        <td>LJ[pH]:</td><td><input/></td>
    </tr>
</calctable>
<div id = "datadiv">
</div>
<script>
    
InA = 100;
ImuA = InA/1000;
IA = ImuA/1000;
phi0norm = 170;//nanohenry X nanoamp, or 170e-18 or 0.17e-15 or 1.7e-16
LJnH = phi0norm/InA;
LJpH = LJnH*1000;
LJH = LJnH*1e-9;

data = {
    "InA":1,
    "ImuA":1,
    "IA":1,
    "LJnH":1,
    "LJH":1,
    "LJpH":1
}

inputs = document.getElementById("calcTable").getElementsByTagName("input");

function redraw(){
    inputs[0].value = IA.toExponential(2);
inputs[1].value = ImuA.toExponential(2);
inputs[2].value = InA.toExponential(2);
inputs[3].value = LJH.toExponential(2);
inputs[4].value = LJnH.toExponential(2);
inputs[5].value = LJpH.toExponential(2);

data.InA = parseFloat(inputs[2].value);
data.ImuA = parseFloat(inputs[1].value);
data.IA = parseFloat(inputs[0].value);
data.LJH = parseFloat(inputs[3].value);
data.LJnH = parseFloat(inputs[4].value);
data.LJpH = parseFloat(inputs[5].value);

document.getElementById("textIO").value = JSON.stringify(data,null,"    ");

}

 inputs[0].onchange = function(){
    IA = parseFloat(this.value);
    ImuA = IA*1000;
    InA = ImuA*1000;
    LJnH = phi0norm/InA;
    LJpH = LJnH*1000;
    LJH = LJnH*1e-9;

    redraw();
 }
 inputs[1].onchange = function(){
    ImuA = parseFloat(this.value);
    InA = ImuA*1000;
    IA = ImuA/1000;
    LJnH = phi0norm/InA;
    LJpH = LJnH*1000;
    LJH = LJnH*1e-9;
    redraw();     
 }
 inputs[2].onchange = function(){
    InA = parseFloat(this.value);
    ImuA = InA/1000;
    IA = ImuA/1000;
    LJnH = phi0norm/InA;
    LJpH = LJnH*1000;
    LJH = LJnH*1e-9;
    redraw();     
 }
 inputs[3].onchange = function(){
    LJH = parseFloat(this.value);
    LJnH = LJH/1e-9;
    LJpH = LJH/1e-12;
    InA = phi0norm/InA;
    IA = InA*1e-9;
    ImuA = InA/1000;
    redraw();
 }
 inputs[4].onchange = function(){
    LJnH = parseFloat(this.value);
    LJH = LJnH*1e-9;
    LJpH = LJH/1e-12;
    InA = phi0norm/InA;
    IA = InA*1e-9;
    ImuA = InA/1000;
    redraw();
 }
 inputs[5].onchange = function(){
    LJpH = parseFloat(this.value);
    LJH = LJpH*1e-12;
    LJnH = LJH/1e-9;
    InA = phi0norm/InA;
    IA = InA*1e-9;
    ImuA = InA/1000;
    redraw();
 }

</script>